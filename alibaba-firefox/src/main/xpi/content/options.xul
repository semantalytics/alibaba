<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Copyright (c) 2007 James Leigh
  -
  - Permission to use, copy, modify, and distribute this software for any
  - purpose with or without fee is hereby granted, provided that the above
  - copyright notice and this permission notice appear in all copies.
  -
  - THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  - WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  - MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  - ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  - WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  - ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  - OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  - -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<!DOCTYPE prefwindow SYSTEM "chrome://alibaba/locale/options.dtd">
<prefwindow id="alibaba-prefwindow" title="&prefwindow.title;"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:html="http://www.w3.org/1999/xhtml">
  <script type="text/javascript">
  // <![CDATA[
  function startServer() {
    var PREF_ID = "@mozilla.org/preferences-service;1";
    var nsIPrefBranch = Components.interfaces.nsIPrefBranch;
    var prefManager = Components.classes[PREF_ID].getService(nsIPrefBranch);
    if (prefManager.getBoolPref("extensions.alibaba.embed")) {  
      var nsILifeCycle = Components.interfaces.nsILifeCycle;
      var SERVER_ID = "@alibaba.openrdf.org/jettyServer;1";
      var server = Components.classes[SERVER_ID].getService(nsILifeCycle);
      if (!server.isRunning() && !server.isFailed()) {
        server.start();
      }
    }
  }
  function clearRepository() {
    startServer();
    var req = new XMLHttpRequest();
    req.open('DELETE', 'http://localhost:6139/repository/', false);
    req.send(null);
    if (req.status != 204) {
       throw req.statusText;
    }
  }
  function uploadStream(stream, type) {
    startServer();
    var req = new XMLHttpRequest();
    if (type) {
      req.setRequestHeader("Content-Type", type);
    }
    req.open('POST', 'http://localhost:6139/repository/', false);
    req.send(stream);
    if (req.status != 204) {
      throw req.statusText;
    }
  }
  function importRdf(filename) {
    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

    var FILE_ID = "@mozilla.org/file/local;1";
    var INPUT_ID = "@mozilla.org/network/file-input-stream;1";
    var BUFFERED_ID = "@mozilla.org/network/buffered-input-stream;1";
    var BININPUT_ID = "@mozilla.org/binaryinputstream;1";

    var nsILocalFile = Components.interfaces.nsILocalFile;
    var nsIFileInputStream = Components.interfaces.nsIFileInputStream;

    var file = Components.classes[FILE_ID].createInstance(nsILocalFile);
	file.initWithPath(filename);		
	var stream = Components.classes[INPUT_ID].createInstance(nsIFileInputStream);
	stream.init(file, 0x01, 00004, null);
	var bstream =  Components.classes["@mozilla.org/network/buffered-input-stream;1"]
		.getService();
	bstream.QueryInterface(Components.interfaces.nsIBufferedInputStream);
	bstream.init(stream, 1000);
	bstream.QueryInterface(Components.interfaces.nsIInputStream);
	var binary = Components.classes["@mozilla.org/binaryinputstream;1"]
		.createInstance(Components.interfaces.nsIBinaryInputStream);
	binary.setInputStream (stream);
    uploadStream(binary.readBytes(binary.available()));
  }
  // ]]>
  </script>
  <prefpane id="connection" label="&connection.title;">
    <preferences>
      <preference id="embed" name="extensions.alibaba.embed" type="bool"/>
      <preference id="host-url" name="extensions.alibaba.host-url" type="string"/>
      <preference id="format" name="extensions.alibaba.format" type="string"/>
      <preference id="intent" name="extensions.alibaba.intent" type="string"/>
    </preferences>
    <checkbox id="embed-textbox" preference="embed" label="&embed.label;"/>
    <box>
    <label class="text-link" href="http://localhost:6139/repository" onclick="startServer();">&download.label;</label>
    <box flex="1"/>
    <button label="&clear.label;" onclick="confirm('&clear.confirm;') &amp;&amp; clearRepository()"/>
    </box>
    <label>&import.label;</label>
    <html:input type="file" onchange="importRdf(this.value); this.value = ''"/>
    <label control="host-url-textbox">&host-url.label;</label>
    <box>
    <textbox id="host-url-textbox" preference="host-url" size="40"/>
    <box flex="1"/></box>
    <label control="format-textbox">&format.label;</label>
    <box>
    <menulist id="format-menulist" preference="format">
      <menupopup>
        <menuitem label="&xul-format.label;" value="application/vnd.mozilla.xul+xml"/>
        <menuitem label="&html-format.label;" value="text/html"/>
        <menuitem label="&text-format.label;" value="text/plain"/>
        <menuitem label="&json-format.label;" value="application/json"/>
        <menuitem label="&povml-format.label;" value="application/alibaba.povml+xml"/>
      </menupopup>
    </menulist>
    <box flex="1"/></box>
    <label control="intent-menulist">&intent.label;</label>
    <box>
    <menulist id="intent-menulist" preference="intent">
      <menupopup>
        <menuitem label="&present-intent.label;" value="&ali;present"/>
        <menuitem label="&general-intent.label;" value="&ali;general"/>
        <menuitem label="&detail-intent.label;" value="&ali;detail"/>
        <menuitem label="&related-intent.label;" value="&ali;related"/>
        <menuitem label="&modify-intent.label;" value="&ali;modify"/>
      </menupopup>
    </menulist>
    <box flex="1"/></box>
  </prefpane>
</prefwindow>
