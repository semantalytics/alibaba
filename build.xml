<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="alibaba" default="help" basedir=".">

	<property name="docs" value="src/doc" />
	<property name="xdocs" value="target/site" />
    <property name="lib" location="lib" />
    <property name="downloads" location="downloads" />

	<target name="help" description="Usage information">
		<echo message="AliBaba Release Builder" />
		<echo message="========================" />
		<echo message="The purpose of this Ant build file is to create releases for AliBaba." />
		<echo message="It is not intended to capture every aspect of project development. Please use Maven for development purposes." />
		<echo message=" " />
		<echo message="Available targets: " />
		<echo message=" " />
		<echo message="  clean                          : cleans targets" />
		<echo message="  build                          : compiles classes" />
		<echo message="  package                        : package for release" />
		<echo message="  docs     : create documentation" />
		<echo message="  -Declipse.workspace=.. eclipse : create eclipse projects" />
	</target>

	<target name="clean" description="Removes release artifacts">
		<antcall target="mvn">
			<param name="args" value="clean" />
		</antcall>
	</target>

	<target name="eclipse" depends="eclipse-add-maven-repo" description="Creates .project and .classpath files">
		<antcall target="mvn">
			<param name="args" value="-DdownloadSources=true eclipse:eclipse" />
		</antcall>
	</target>

	<target name="eclipse-add-maven-repo" description="Sets the classpath variable M2_REPO" if="eclipse.workspace">
		<antcall target="mvn">
			<param name="args" value="-Declipse.workspace=${eclipse.workspace} eclipse:add-maven-repo" />
		</antcall>
	</target>

	<target name="build" description="Compiles the Java classes">
		<antcall target="mvn">
			<param name="args" value="--offline -Dmaven.test.skip=true source:jar package install" />
		</antcall>
		<antcall target="build-sdk"/>
	</target>

	<target name="dist" description="Generate the distribution artifacts">
		<antcall target="mvn">
			<param name="args" value="-Dmaven.test.skip=true source:jar package install" />
		</antcall>
		<antcall target="build-sdk"/>
	</target>

	<target name="package" depends="clean,mvn-build,build-sdk" description="Create and test release artifacts">
	</target>

	<target name="mvn-build">
		<antcall target="mvn">
			<param name="args" value="-U source:jar install" />
		</antcall>
	</target>

    <target name="dependencies">
        <available file="${lib}" property="lib.present" />
        <property file="dependencies.properties" />
        <basename file="${commons-cli.url}" property="commons-cli.zip" />
        <basename file="${httpasyncclient.url}" property="httpasyncclient.zip" />
        <basename file="${commons-io.url}" property="commons-io.zip" />
        <basename file="${jackson-core.url}" property="jackson-core.jar" />
        <basename file="${javassist.url}" property="javassist-3.11.GA.zip" />
        <basename file="${opencsv.url}" property="opencsv.jar" />
        <basename file="${slf4j.url}" property="slf4j.zip" />
        <basename file="${openrdf-sesame.url}" property="openrdf-sesame.jar" />
        <mkdir dir="${downloads}" />
        <get usetimestamp="true" skipexisting="${lib.present}" dest="${downloads}">
            <url url="${commons-cli.url}" />
            <url url="${httpasyncclient.url}" />
            <url url="${commons-io.url}" />
            <url url="${jackson-core.url}" />
            <url url="${javassist.url}" />
            <url url="${opencsv.url}" />
            <url url="${slf4j.url}" />
            <url url="${openrdf-sesame.url}" />
        </get>
        <mkdir dir="${lib}" />
        <unzip overwrite="false" src="${downloads}/${commons-cli.zip}" dest="${lib}">
            <patternset>
                <include name="**/*.jar" />
                <exclude name="**/*-javadoc.jar" />
                <exclude name="**/*-sources.jar" />
                <exclude name="**/*-tests.jar" />
            </patternset>
            <mapper type="flatten" />
        </unzip>
        <unzip overwrite="false" src="${downloads}/${httpasyncclient.zip}" dest="${lib}">
            <patternset>
                <include name="**/*.jar" />
                <exclude name="**/*-javadoc.jar" />
                <exclude name="**/*-sources.jar" />
                <exclude name="**/*-tests.jar" />
            </patternset>
            <mapper type="flatten" />
        </unzip>
        <unzip overwrite="false" src="${downloads}/${commons-io.zip}" dest="${lib}">
            <patternset>
                <include name="**/*.jar" />
                <exclude name="**/*-javadoc.jar" />
                <exclude name="**/*-sources.jar" />
                <exclude name="**/*-tests.jar" />
            </patternset>
            <mapper type="flatten" />
        </unzip>
        <copy file="${downloads}/${jackson-core.jar}" tofile="${lib}/${jackson-core.jar}" />
        <unzip overwrite="false" src="${downloads}/${javassist-3.11.GA.zip}" dest="${lib}">
            <patternset>
                <include name="**/*.jar" />
                <exclude name="**/*-javadoc.jar" />
                <exclude name="**/*-sources.jar" />
                <exclude name="**/*-tests.jar" />
            </patternset>
            <mapper type="flatten" />
        </unzip>
        <copy file="${downloads}/${opencsv.jar}" tofile="${lib}/${opencsv.jar}" />
        <unzip overwrite="false" src="${downloads}/${slf4j.zip}" dest="${lib}">
            <patternset>
                <include name="*/slf4j-api*.jar" />
                <include name="*/slf4j-jdk*.jar" />
                <exclude name="**/*-javadoc.jar" />
                <exclude name="**/*-sources.jar" />
                <exclude name="**/*-tests.jar" />
            </patternset>
            <mapper type="flatten" />
        </unzip>
        <copy file="${downloads}/${openrdf-sesame.jar}" tofile="${lib}/${openrdf-sesame.jar}" />
    </target>

	<target name="build-sdk" depends="dependencies">
		<xmlproperty file="pom.xml" />
		<mkdir dir="target" />
		<mkdir dir="lib" />
		<property name="lib.dir" location="lib" />
		<property name="target.dir" location="target" />
		<path id="libcp">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>
		<pathconvert property="libpath" refid="libcp" pathsep=" " dirsep="/">
			<map from="${target.dir}/" to="" />
			<map from="${lib.dir}/" to="../lib/" />
		</pathconvert>
		<antcall target="concat-file">
			<param name="path" value="META-INF/services/org.openrdf.repository.config.RepositoryFactory"/>
		</antcall>
		<antcall target="concat-file">
			<param name="path" value="META-INF/services/org.openrdf.sail.config.SailFactory"/>
		</antcall>
		<antcall target="concat-file">
			<param name="path" value="META-INF/services/org.openrdf.repository.object.composition.BehaviourProvider"/>
		</antcall>
		<antcall target="concat-file">
			<param name="path" value="META-INF/services/org.openrdf.repository.object.advice.AdviceProvider"/>
		</antcall>
		<antcall target="concat-file">
			<param name="path" value="META-INF/org.openrdf.annotations"/>
		</antcall>
		<antcall target="concat-file">
			<param name="path" value="META-INF/org.openrdf.behaviours"/>
		</antcall>
		<antcall target="concat-file">
			<param name="path" value="META-INF/org.openrdf.concepts"/>
		</antcall>
		<antcall target="concat-file">
			<param name="path" value="META-INF/org.openrdf.datatypes"/>
		</antcall>
		<property name="excludes" value="META-INF/MANIFEST.MF META-INF/services/org.openrdf.repository.config.RepositoryFactory META-INF/services/org.openrdf.sail.config.SailFactory META-INF/services/org.openrdf.repository.object.composition.BehaviourProvider META-INF/services/org.openrdf.repository.object.advice.AdviceProvider META-INF/org.openrdf.annotations META-INF/org.openrdf.behaviours META-INF/org.openrdf.concepts META-INF/org.openrdf.datatypes" />
        <tstamp>
            <format property="build.number" pattern="ddHHmm" timezone="UTC" />
        </tstamp>
		<jar destfile="target/openrdf-alibaba-${project.version}.jar" filesetmanifest="skip">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Program-Version" value="${project.version}" />
				<attribute name="Class-Path" value="${libpath}" />
                <attribute name="Implementation-Title" value="${project.name}" />
                <attribute name="Implementation-Version" value="${project.version}+${build.number}" />
                <attribute name="Implementation-Vendor" value="${vendor}" />
			</manifest>
			<zipfileset dir="target/services/META-INF" prefix="META-INF" />
			<zipfileset src="keyword-sail/target/alibaba-sail-keyword-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="blob-store/target/alibaba-store-blob-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="optimistic-sail/target/alibaba-sail-optimistic-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="object-composition/target/alibaba-composition-object-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="object-repository/target/alibaba-repository-object-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="object-server/target/alibaba-http-object-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="runtime/target/alibaba-runtime-${project.version}.jar" excludes="${excludes}" />
		</jar>
		<zip destfile="target/openrdf-alibaba-${project.version}.zip">
			<zipfileset dir="." includes="*.txt" />
			<zipfileset dir="target" includes="README.txt" />
			<zipfileset dir="lib" prefix="lib" />
			<zipfileset dir="target" includes="*.jar" prefix="dist" />
			<zipfileset dir="src/dist/bin" prefix="bin" includes="*.sh" filemode="755" />
			<zipfileset dir="src/dist/bin" prefix="bin" excludes="*.sh" />
			<zipfileset dir="target/services/META-INF" prefix="src/META-INF" />
			<zipfileset src="keyword-sail/target/alibaba-sail-keyword-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="blob-store/target/alibaba-store-blob-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="optimistic-sail/target/alibaba-sail-optimistic-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="object-composition/target/alibaba-composition-object-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="object-repository/target/alibaba-repository-object-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="object-server/target/alibaba-http-object-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="runtime/target/alibaba-runtime-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
		</zip>
	</target>

	<target name="docs" description="Create user and system documentation only">
		<antcall target="javadocs"/>
		<antcall target="owldocs"/>
		<antcall target="site"/>
	</target>

	<target name="javadocs">
		<antcall target="mvn">
			<param name="args" value="-Dmaven.test.skip=true compile javadoc:aggregate" />
		</antcall>
	</target>

	<target name="owldocs">
		<xslt includes="*/src/main/owl/*.owl" destdir="target/site/owldocs/" extension=".xhtml" style="ns-schema.xsl" filenameparameter="htmlfile"/>
		<move todir="target/site/owldocs/" flatten="true">
			<fileset dir="target/site/owldocs/">
				<include name="**/*.xhtml"/>
				<exclude name="index.xhtml"/>
			</fileset>
		</move>
		<delete includeemptydirs="true">
            <fileset dir="target/site/owldocs/"  >
                <and>
                    <size value="0"/>
                    <type type="dir"/>
                </and>
            </fileset>
        </delete>
		<replaceregexp match="\s*(&lt;a )(href=&quot;[^:]*)\.owl(\#?[^&gt;]*&gt;)([^&lt;]*)(&lt;/a&gt;)" replace="&lt;!-- \4 --&gt;\1\2.xhtml\3\4\5" byline="true">
			<fileset dir="target/site/owldocs/">
				<include name="*.xhtml"/>
				<exclude name="index.xhtml"/>
			</fileset>
		</replaceregexp>
		<concat destfile="target/site/owldocs/index.xhtml" append="false">
		  <union>
			<sort>
			  <tokens>
					<fileset dir="target/site/owldocs/">
						<include name="*.xhtml"/>
						<exclude name="index.xhtml"/>
					</fileset>
				<linetokenizer includedelims="true" />
			  </tokens>
			</sort>
		  </union>
			<filterchain>
				<linecontainsregexp>
					<regexp pattern="&lt;link rel=&quot;self&quot;"/>
				</linecontainsregexp>
				<tokenfilter>
					<linetokenizer/>
					<replaceregex pattern="&lt;link[^&gt;]*href=&quot;([^&quot;]*)\.owl&quot;[^&gt;]*title=&quot;([^&quot;]*)&quot;[^&gt;]*&gt;" replace="&lt;br /&gt;&lt;a href='\1.xhtml' target='content'&gt;\2&lt;/a&gt;"/>
				</tokenfilter>
			</filterchain>
			<header filtering="no" trimleading="yes"><![CDATA[
				<html xmlns="http://www.w3.org/1999/xhtml"><head><title>AliBaba OWL Documentation</title></head><body style="margin:0px">
				<iframe name="content" width="80%" height="100%" style="float:right;border-width:0px"></iframe>
				<div style="width:20%">
				<div style="height:20%;overflow:auto">
				<div style="padding:8px">
				<b>Ontologies</b>
			]]>
			</header>
			<footer filtering="no" trimleading="yes"><![CDATA[
				</div></div>
				<div style="height:80%;overflow:auto">
				<div style="padding:8px">
				<b>All Resources</b>
			]]>
			</footer>
		</concat>
		<concat destfile="target/site/owldocs/index.xhtml" append="true">
		  <union>
			<sort>
			  <tokens>
					<fileset dir="target/site/owldocs/">
						<include name="*.xhtml"/>
						<exclude name="index.xhtml"/>
					</fileset>
				<linetokenizer includedelims="true" />
			  </tokens>
			</sort>
		  </union>
			<filterchain>
				<linecontainsregexp>
					<regexp pattern="&lt;a href=&quot;[^:]*\.xhtml\#[^&quot;]"/>
				</linecontainsregexp>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="tokenchar" name="begintoken" value="&lt;" />
					<param type="token" name="a" value="&lt;br /&gt;&lt;a target='content' "/>
					<param type="tokenchar" name="endtoken" value=" " />
				</filterreader>
			</filterchain>
			<footer filtering="no" trimleading="yes"><![CDATA[
				</div></div></div>
				</body></html>
			]]>
			</footer>
		</concat>
	</target>

	<target name="site">
		<xmlproperty file="pom.xml" />
		<zip destfile="target/alibaba-apidocs-${project.version}.zip" basedir="target/site/apidocs" />
		<zip destfile="target/alibaba-owldocs-${project.version}.zip" basedir="target/site/owldocs" />
	</target>

	<target name="mvn">
		<echo message="mvn -B ${args}" />
		<exec os="Windows XP, Windows Vista" executable="mvn.bat" failonerror="true">
			<arg line="-B ${args}" />
		</exec>
		<exec os="Linux, Mac OS X" executable="mvn" failonerror="true">
			<arg line="-B ${args}" />
		</exec>
	</target>

	<target name="concat-file">
		<echo message="${path}"/>

		<concat destfile="target/services/${path}" fixlastline="yes">
			<fileset dir="." includes="*/src/main/resources/${path}"/>
		</concat>
	</target>

</project>
