<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="alibaba" default="package" basedir=".">
	<property name="python.bin" value="python2.4" />
	<property name="cwm.py" value="/home/james/Projects/cwm-1.0.0/cwm.py" />

	<target name="clean" description="Removes release artifacts">
		<antcall target="mvn">
			<param name="args" value="clean" />
		</antcall>
	</target>

	<target name="package" depends="convert-n3, mvn-build, alibaba-firefox" description="Create release artifacts">
	</target>

	<target name="complie" depends="convert-n3" description="Compiles the classes and resources">
		<antcall target="mvn">
			<param name="args" value="-o compile" />
		</antcall>
	</target>

	<target name="deploy" description="Copies exploded war file to deploy.dir">
		<xmlproperty file="alibaba-servlet/pom.xml"/>
		<mkdir dir="${deploy.dir}/${project.artifactId}-${project.version}"/>
		<copy todir="${deploy.dir}/${project.artifactId}-${project.version}">
			<fileset dir="alibaba-servlet/src/main/webapp" />
		</copy>
		<mkdir dir="${deploy.dir}/${project.artifactId}-${project.version}/WEB-INF/classes"/>
		<copy todir="${deploy.dir}/${project.artifactId}-${project.version}/WEB-INF/classes">
			<fileset dir="alibaba-pov/target/classes" />
			<fileset dir="alibaba-decor/target/classes" />
			<fileset dir="alibaba-servlet/target/classes" />
		</copy>
		<mkdir dir="${deploy.dir}/${project.artifactId}-${project.version}/WEB-INF/lib"/>
		<copy todir="${deploy.dir}/${project.artifactId}-${project.version}/WEB-INF/lib">
			<fileset dir="alibaba-servlet/target/${project.artifactId}-${project.version}/WEB-INF/lib"/>
		</copy>
	</target>

	<target name="convert-n3" description="Convert .n3 files into rdf or ntriple files">
		<antcall target="convert-n3-to-owl">
			<param name="filename" value="alibaba-pov/src/main/resources/META-INF/ontologies/point-of-view-ontology" />
		</antcall>
		<antcall target="convert-n3-to-owl">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/ontologies/decor-ontology" />
		</antcall>
		<antcall target="convert-n3-to-rdf">
			<param name="filename" value="alibaba-pov/src/main/resources/META-INF/point-of-views/common-point-of-view" />
		</antcall>
		<antcall target="convert-n3-to-rdf">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/point-of-views/decor-point-of-view" />
		</antcall>
		<antcall target="convert-n3-to-nt">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/decors/text-decor" />
		</antcall>
		<antcall target="convert-n3-to-nt">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/decors/xul-decor" />
		</antcall>
		<antcall target="convert-n3-to-nt">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/decors/html-decor" />
		</antcall>
		<antcall target="convert-n3-to-nt">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/decors/common-decor" />
		</antcall>
		<antcall target="convert-n3-to-nt">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/decors/json-decor" />
		</antcall>
		<antcall target="convert-n3-to-nt">
			<param name="filename" value="alibaba-decor/src/main/resources/META-INF/decors/povml-decor" />
		</antcall>
	</target>

	<target name="convert-n3-to-nt">
		<uptodate targetfile="${filename}.nt" srcfile="${filename}.n3" property="cwm.skip"/>
		<antcall target="cwm">
			<param name="src.filename" value="${filename}.n3"/>
			<param name="dest.filename" value="${filename}.nt"/>
			<param name="flags" value="--ntriples"/>
		</antcall>
	</target>

	<target name="convert-n3-to-rdf">
		<uptodate targetfile="${filename}.rdf" srcfile="${filename}.n3" property="cwm.skip"/>
		<antcall target="cwm">
			<param name="src.filename" value="${filename}.n3"/>
			<param name="dest.filename" value="${filename}.rdf"/>
			<param name="flags" value="--rdf"/>
		</antcall>
	</target>

	<target name="convert-n3-to-owl">
		<uptodate targetfile="${filename}.owl" srcfile="${filename}.n3" property="cwm.skip"/>
		<antcall target="cwm">
			<param name="src.filename" value="${filename}.n3"/>
			<param name="dest.filename" value="${filename}.owl"/>
			<param name="flags" value="--rdf"/>
		</antcall>
	</target>

	<target name="cwm" unless="cwm.skip">
		<echo message="${dest.filename}" />
		<exec executable="${python.bin}" logError="true" output="${dest.filename}">
			<arg line="${cwm.py} ${src.filename} ${flags}" />
		</exec>
	</target>

	<target name="mvn-build">
		<antcall target="mvn">
			<param name="args" value="source:jar install" />
		</antcall>
	</target>

	<target name="docs" description="Create user and system documentation only">
		<antcall target="mvn">
			<param name="args" value="-Dmaven.test.skip=true compile" />
		</antcall>
		<copy todir="target/classes">
			<fileset dir=".">
				<include name="*/target/classes/**/*.class" />
			</fileset>
		</copy>
		<antcall target="mvn">
			<param name="args" value="site javancss:report" />
		</antcall>
		<copy todir="target/site/alibaba-decor">
			<fileset dir="alibaba-decor/target/site" />
		</copy>
		<copy todir="target/site/alibaba-pov">
			<fileset dir="alibaba-pov/target/site" />
		</copy>
		<copy todir="target/site/alibaba-servlet">
			<fileset dir="alibaba-servlet/target/site" />
		</copy>
		<xmlproperty file="pom.xml" />
		<zip destfile="target/alibaba-site-${project.version}.zip" basedir="target/site"/>
	</target>

	<target name="alibaba-firefox" description="Create the xpi plugin for firefox">
		<mkdir dir="alibaba-firefox/target" />
		<zip destfile="alibaba-firefox/target/alibaba-firefox.xpi" basedir="alibaba-firefox/src/main/xpi" />
	</target>

	<target name="mvn">
		<echo message="mvn -B ${args}" />
		<exec os="Windows XP, Windows Vista" executable="mvn.bat" failonerror="true">
			<arg line="-B ${args}" />
		</exec>
		<exec os="Linux" executable="mvn" failonerror="true">
			<arg line="-B ${args}" />
		</exec>
	</target>

</project>
