<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="alibaba" default="help" basedir=".">

	<property name="docs" value="src/doc" />
	<property name="xdocs" value="target/site" />

	<target name="help" description="Usage information">
		<echo message="AliBaba Release Builder" />
		<echo message="========================" />
		<echo message="The purpose of this Ant build file is to create releases for AliBaba." />
		<echo message="It is not intended to capture every aspect of project development. Please use Maven for development purposes." />
		<echo message=" " />
		<echo message="Available targets: " />
		<echo message=" " />
		<echo message="  clean                          : cleans targets" />
		<echo message="  build                          : compiles classes" />
		<echo message="  package                        : package for release" />
		<echo message="  -Dsgmltools=sgmltools docs     : create documentation" />
		<echo message="  -Declipse.workspace=.. eclipse : create eclipse projects" />
	</target>

	<target name="clean" description="Removes release artifacts">
		<antcall target="mvn">
			<param name="args" value="clean" />
		</antcall>
	</target>

	<target name="eclipse" depends="eclipse-add-maven-repo" description="Creates .project and .classpath files">
		<antcall target="mvn">
			<param name="args" value="-DdownloadSources=true eclipse:eclipse" />
		</antcall>
	</target>

	<target name="eclipse-add-maven-repo" description="Sets the classpath variable M2_REPO" if="eclipse.workspace">
		<antcall target="mvn">
			<param name="args" value="-Declipse.workspace=${eclipse.workspace} eclipse:add-maven-repo" />
		</antcall>
	</target>

	<target name="build" description="Compiles the Java classes">
		<antcall target="mvn">
			<param name="args" value="--offline -Dmaven.test.skip=true source:jar package" />
		</antcall>
		<antcall target="build-sdk"/>
	</target>

	<target name="package" depends="mvn-build,build-sdk" description="Create release artifacts">
	</target>

	<target name="mvn-build">
		<antcall target="mvn">
			<param name="args" value="-U source:jar install" />
		</antcall>
	</target>

	<target name="build-sdk">
		<xmlproperty file="pom.xml" />
		<mkdir dir="target" />
		<mkdir dir="lib" />
		<property name="lib.dir" location="lib" />
		<property name="target.dir" location="target" />
		<path id="libcp">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>
		<pathconvert property="libpath" refid="libcp" pathsep=" " dirsep="/">
			<map from="${target.dir}/" to="" />
			<map from="${lib.dir}/" to="../lib/" />
		</pathconvert>
		<antcall target="concat-file">
			<param name="path" value="META-INF/services/org.openrdf.repository.config.RepositoryFactory"/>
		</antcall>
		<property name="excludes" value="META-INF/MANIFEST.MF META-INF/services/org.openrdf.repository.config.RepositoryFactory" />
		<jar destfile="target/openrdf-alibaba-${project.version}.jar" index="true" filesetmanifest="skip">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Program-Version" value="${project.version}" />
				<attribute name="Class-Path" value="${libpath}" />
			</manifest>
			<zipfileset dir="target/services/META-INF" prefix="META-INF" />
			<zipfileset src="model/target/alibaba-model-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="optimistic-repository/target/alibaba-repository-optimistic-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="federation-sail/target/alibaba-sail-federation-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="sparql-repository/target/alibaba-repository-sparql-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="object-repository/target/alibaba-repository-object-${project.version}.jar" excludes="${excludes}" />
			<zipfileset src="runtime/target/alibaba-runtime-${project.version}.jar" excludes="${excludes}" />
		</jar>
		<zip destfile="target/openrdf-alibaba-${project.version}.zip">
			<zipfileset dir="." includes="*.txt" />
			<zipfileset dir="lib" prefix="lib" />
			<zipfileset dir="target" includes="*.jar" prefix="dist" />
			<zipfileset dir="metadata-server/target" includes="alibaba-server-metadata-${project.version}.jar" prefix="dist" />
			<zipfileset dir="object-repository/src/test/resources/ontologies/" includes="object-ontology.owl" prefix="dist" />
			<zipfileset dir="src/dist/bin" prefix="bin" />
			<zipfileset dir="target/services/META-INF" prefix="src/META-INF" />
			<zipfileset src="model/target/alibaba-model-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="optimistic-repository/target/alibaba-repository-optimistic-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="federation-sail/target/alibaba-sail-federation-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="sparql-repository/target/alibaba-repository-sparql-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="object-repository/target/alibaba-repository-object-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="metadata-server/target/alibaba-server-metadata-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
			<zipfileset src="runtime/target/alibaba-runtime-${project.version}-sources.jar" prefix="src" excludes="${excludes}" />
		</zip>
	</target>

	<target name="docs" description="Create user and system documentation only">
		<antcall target="mvn">
			<param name="args" value="-Dmaven.test.skip=true compile" />
		</antcall>
		<antcall target="mvn">
			<param name="args" value="site javancss:report site:deploy" />
		</antcall>
		<xmlproperty file="pom.xml" />
		<zip destfile="target/alibaba-site-${project.version}.zip" basedir="target/website" />
	</target>

	<target name="docbook" if="sgmltools">
		<replaceregexp match="&gt;&lt;dummy" replace="" flags="gm" file="${docs}/user-guide.sgml" />
		<replaceregexp match="&lt;dummy&gt;" replace="" flags="gm" file="${docs}/user-guide.sgml" />
		<replaceregexp match="&lt;/dummy&gt;" replace="" flags="gm" file="${docs}/user-guide.sgml" />
		<echo>${sgmltools} --backend=onehtml getting-started.sgml</echo>
		<exec dir="${docs}" executable="${sgmltools}" failonerror="true">
			<arg value="--backend=onehtml" />
			<arg value="user-guide.sgml" />
		</exec>
		<move file="${docs}/user-guide.html" tofile="${xdocs}/user-guide.html" />
	</target>

	<target name="mvn">
		<echo message="mvn -B ${args}" />
		<exec os="Windows XP, Windows Vista" executable="mvn.bat" failonerror="true">
			<arg line="-B ${args}" />
		</exec>
		<exec os="Linux" executable="mvn" failonerror="true">
			<arg line="-B ${args}" />
		</exec>
	</target>

	<target name="concat-file">
		<echo message="${path}"/>

		<concat destfile="target/services/${path}" fixlastline="yes">
			<fileset dir="." includes="*/src/main/resources/${path}"/>
		</concat>
	</target>

</project>
