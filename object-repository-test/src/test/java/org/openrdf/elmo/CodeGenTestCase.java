package org.openrdf.elmo.codegen;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

import junit.framework.TestCase;

public abstract class CodeGenTestCase extends TestCase {

	/** Directory used to store files generated by this test case. */
	private static File targetDir;

	/**
	 * Setup the test case.
	 * 
	 * @throws Exception
	 */
	@Override
	protected void setUp() throws Exception {
		if (targetDir == null) {
			targetDir = File.createTempFile("elmo-codegen", "");
			targetDir.delete();
			targetDir = new File(targetDir.getParentFile(), "elmo-codegen");
			targetDir.mkdir();
		}
	}

	protected OntologyConverter createConventer() {
		OntologyConverter converter = new OntologyConverter();
		converter.setImportJarOntologies(false);
		converter.addRdfSource(find("/ontologies/xsd-datatypes.rdf"));
		converter.addRdfSource(find("/ontologies/rdfs-schema.rdf"));
		converter.addRdfSource(find("/ontologies/owl-schema.rdf"));
		return converter;
	}

	/**
	 * Count the number of files with the given <code>suffix</code> that exist
	 * inside the specified jar file.
	 * 
	 * @param jar
	 * @param suffix
	 * @return
	 * @throws IOException
	 */
	protected int countClasses(File jar, String suffix) throws IOException {
		int count = 0;
		JarFile file = new JarFile(jar);
		Enumeration<JarEntry> entries = file.entries();
		while (entries.hasMoreElements()) {
			String name = entries.nextElement().getName();
			if (name.endsWith(suffix) && !name.contains("-")) {
				count++;
			}
		}
		return count;
	}

	/**
	 * Creates a new File object in the <code>targetDir</code> folder.
	 * 
	 * @param name
	 * @return
	 */
	protected File createFile(String filename) {
		File file = new File(targetDir, filename);
		if (file.exists()) {
			file.delete();
		}
		return file;
	}

	/**
	 * Returns a resource from the classpath.
	 * 
	 * @param owl
	 * @return
	 */
	protected URL find(String owl) {
		return getClass().getResource(owl);
	}
}
