@prefix msg  :<http://www.openrdf.org/rdf/2011/messaging#>.
@prefix owl  :<http://www.w3.org/2002/07/owl#>.
@prefix rdfs :<http://www.w3.org/2000/01/rdf-schema#>.
@prefix rdf  :<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix xsd  :<http://www.w3.org/2001/XMLSchema#>.
@prefix :<#>.

:test a :ScriptTest.

:ScriptTest a owl:Class; owl:definedBy <>.

<> a owl:Ontology.

:testCase rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom :ScriptTest];
	rdfs:subClassOf [owl:onProperty msg:objectSet; owl:allValuesFrom owl:Nothing];
	msg:script "this.assertTrue(true);".

:testSelf rdfs:subClassOf :testCase;
	msg:imports :test;
	msg:script "this.assertEquals(this, test)".

:testMethodCall rdfs:subClassOf :testCase;
	msg:script "this.assertEquals('Hello World', this.hello())".

:hello rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom :ScriptTest];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom xsd:string];
	msg:script "return 'Hello World'".

:testProceed rdfs:subClassOf :testCase;
	msg:script "this.assertEquals('Hello World', this.overrided())".

:overrided rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom :ScriptTest];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom xsd:string];
	msg:script "return 'World'".

:overrider owl:equivalentClass :overrided;
	msg:precedes :overrided;
	msg:script "return 'Hello ' + proceed()".

:testLiteralParameter rdfs:subClassOf :testCase;
	msg:script "this.assertEquals('Hello World', this.helloTo('World'))".

:helloTo rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom :ScriptTest];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom xsd:string];
	msg:script "return 'Hello ' + helloToYou".

:helloToYou a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :helloTo;
	rdfs:range xsd:string.

:testObjectParameter rdfs:subClassOf :testCase;
	msg:imports :test;
	msg:script "this.assertEquals('Hello ' + test, this.helloToObject(this))".

:helloToObject rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target; owl:allValuesFrom :ScriptTest];
	rdfs:subClassOf [owl:onProperty msg:object; owl:allValuesFrom xsd:string];
	msg:script "return 'Hello ' + helloToThis.resource.stringValue()".

:helloToThis a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :helloToObject;
	rdfs:range :ScriptTest.

:testImportsClass rdfs:subClassOf :testCase;
	msg:imports <java:java.lang.Integer>;
	msg:script "this.assertEquals(new Integer('5').intValue(), 5)".

:testImportsJavaPackage rdfs:subClassOf :testCase;
	msg:imports <java:java.lang>;
	msg:script "this.assertEquals(new Integer('5').intValue(), 5)".

:testReturnSet rdfs:subClassOf :testCase;
	msg:script "this.assertTrue(this.createSet() instanceof java.util.Set)".

:createSet rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target;
		owl:allValuesFrom :ScriptTest];
	msg:sparql "SELECT ?self WHERE { ?self a :ScriptTest }".

:testRecursion rdfs:subClassOf :testCase;
	msg:script "this.assertEquals(120, this.factorial(5).intValue())".

:factorial rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target;
		owl:allValuesFrom :ScriptTest];
	rdfs:subClassOf [owl:onProperty msg:literal;
		owl:allValuesFrom xsd:int];
	msg:script "if (n < 1) return 1; return n * this.factorial(n - 1)".

:n a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :factorial;
	rdfs:range xsd:int.

:testFibonacci rdfs:subClassOf :testCase;
	msg:script "this.assertEquals(55, this.fibonacci(10))".

:fibonacci rdfs:subClassOf msg:Message;
	rdfs:subClassOf [owl:onProperty msg:target;
		owl:allValuesFrom :ScriptTest];
	rdfs:subClassOf [owl:onProperty msg:literal;
		owl:allValuesFrom xsd:int];
	rdfs:subClassOf [owl:onProperty msg:literal;
		owl:cardinality 1];
	rdfs:subClassOf [owl:onProperty :fib;
		owl:cardinality 1];
	msg:script "if (fib <= 0) return 0; if (fib <= 1) return 1; return this.fibonacci(fib - 1) + this.fibonacci(fib - 2)".

:fib a owl:DatatypeProperty, owl:FunctionalProperty;
	rdfs:domain :fibonacci;
	rdfs:range xsd:int.

